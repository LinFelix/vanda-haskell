digraph G {
ranksep = 4.0;
"Algorithms.CYK"
"Algorithms.CYKExtended"
"Algorithms.EMDictionaryArray"
"Algorithms.EMDictionaryIntMap"
"Algorithms.EMTrees"
"Algorithms.ExpectationMaximization"
"Algorithms.InsideOutsideWeights"
"Algorithms.InsideOutsideWeightsTree"
"Algorithms.NBest"
"Algorithms.RuleExtraction"
"Algorithms.StateSplit"
"Algorithms.WTABarHillelComplete"
"Algorithms.WTABarHillelTopDown"
"Algorithms.WTABarHillelTopDownBinarizing"
"BenchmarkNegra"
"BenchmarkTDBH"
"Data.Hypergraph"
"Data.Negra"
"Data.Queue"
"Data.WCFG"
"Data.WSA"
"Data.WTA"
"Demo"
"EMTest"
"HUnit_Test.InsideOutsideWeightsTest"
"Main"
"Parser.HGraphLoader"
"Parser.Negra"
"Parser.NegraLazy"
"Parser.Penn"
"QuickCheck_Test.InsideOutsideWeightsTest"
"TestData.TestHypergraph"
"TestData.TestWTA"
"Tools.FastNub"
"Tools.Miscellaneous"
"Tools.PrettyPrint"
"Tools.Timestamps"




"Algorithms.StateSplit" -> "Algorithms.EMTrees"; 

"EMTest" -> "Algorithms.ExpectationMaximization"; 

"Algorithms.ExpectationMaximization" -> "Algorithms.InsideOutsideWeights"; 
"Algorithms.InsideOutsideWeightsTree" -> "Algorithms.InsideOutsideWeights"; 
"HUnit_Test.InsideOutsideWeightsTest" -> "Algorithms.InsideOutsideWeights"; 
"QuickCheck_Test.InsideOutsideWeightsTest" -> "Algorithms.InsideOutsideWeights"; 

"Algorithms.EMTrees" -> "Algorithms.InsideOutsideWeightsTree"; 
"Algorithms.StateSplit" -> "Algorithms.InsideOutsideWeightsTree"; 

"Data.Hypergraph" -> "Algorithms.NBest"; 

"BenchmarkTDBH" -> "Algorithms.RuleExtraction"; 
"Demo" -> "Algorithms.RuleExtraction"; 

"BenchmarkTDBH" -> "Algorithms.StateSplit"; 
"Demo" -> "Algorithms.StateSplit"; 

"BenchmarkTDBH" -> "Algorithms.WTABarHillelComplete"; 

"BenchmarkTDBH" -> "Algorithms.WTABarHillelTopDown"; 

"BenchmarkTDBH" -> "Algorithms.WTABarHillelTopDownBinarizing"; 



"Algorithms.EMTrees" -> "Data.Hypergraph"; 
"Algorithms.ExpectationMaximization" -> "Data.Hypergraph"; 
"Algorithms.InsideOutsideWeights" -> "Data.Hypergraph"; 
"Algorithms.InsideOutsideWeightsTree" -> "Data.Hypergraph"; 
"Algorithms.RuleExtraction" -> "Data.Hypergraph"; 
"Algorithms.StateSplit" -> "Data.Hypergraph"; 
"Algorithms.WTABarHillelComplete" -> "Data.Hypergraph"; 
"Algorithms.WTABarHillelTopDown" -> "Data.Hypergraph"; 
"Algorithms.WTABarHillelTopDownBinarizing" -> "Data.Hypergraph"; 
"BenchmarkTDBH" -> "Data.Hypergraph"; 
"Data.WCFG" -> "Data.Hypergraph"; 
"Data.WTA" -> "Data.Hypergraph"; 
"Demo" -> "Data.Hypergraph"; 
"EMTest" -> "Data.Hypergraph"; 
"QuickCheck_Test.InsideOutsideWeightsTest" -> "Data.Hypergraph"; 
"TestData.TestHypergraph" -> "Data.Hypergraph"; 
"TestData.TestWTA" -> "Data.Hypergraph"; 

"Parser.Negra" -> "Data.Negra"; 
"Parser.NegraLazy" -> "Data.Negra"; 

"Algorithms.WTABarHillelTopDown" -> "Data.Queue"; 
"Data.Hypergraph" -> "Data.Queue"; 

"Algorithms.CYK" -> "Data.WCFG"; 
"Algorithms.CYKExtended" -> "Data.WCFG"; 

"Algorithms.WTABarHillelComplete" -> "Data.WSA"; 
"Algorithms.WTABarHillelTopDown" -> "Data.WSA"; 
"Algorithms.WTABarHillelTopDownBinarizing" -> "Data.WSA"; 
"BenchmarkTDBH" -> "Data.WSA"; 

"Algorithms.WTABarHillelComplete" -> "Data.WTA"; 
"Algorithms.WTABarHillelTopDown" -> "Data.WTA"; 
"Algorithms.WTABarHillelTopDownBinarizing" -> "Data.WTA"; 
"BenchmarkTDBH" -> "Data.WTA"; 
"Demo" -> "Data.WTA"; 
"TestData.TestWTA" -> "Data.WTA"; 

"Main" -> "Demo"; 





"BenchmarkNegra" -> "Parser.Negra"; 
"Demo" -> "Parser.Negra"; 

"Algorithms.InsideOutsideWeightsTree" -> "Parser.NegraLazy"; 
"BenchmarkTDBH" -> "Parser.NegraLazy"; 



"Algorithms.InsideOutsideWeightsTree" -> "TestData.TestHypergraph"; 
"Demo" -> "TestData.TestHypergraph"; 
"HUnit_Test.InsideOutsideWeightsTest" -> "TestData.TestHypergraph"; 

"Demo" -> "TestData.TestWTA"; 

"Data.Hypergraph" -> "Tools.FastNub"; 
"Data.WCFG" -> "Tools.FastNub"; 

"Algorithms.CYKExtended" -> "Tools.Miscellaneous"; 
"Algorithms.EMTrees" -> "Tools.Miscellaneous"; 
"Algorithms.ExpectationMaximization" -> "Tools.Miscellaneous"; 
"Algorithms.InsideOutsideWeightsTree" -> "Tools.Miscellaneous"; 
"Algorithms.NBest" -> "Tools.Miscellaneous"; 
"Algorithms.WTABarHillelTopDown" -> "Tools.Miscellaneous"; 
"Algorithms.WTABarHillelTopDownBinarizing" -> "Tools.Miscellaneous"; 
"BenchmarkTDBH" -> "Tools.Miscellaneous"; 
"Data.Hypergraph" -> "Tools.Miscellaneous"; 
"EMTest" -> "Tools.Miscellaneous"; 
"Parser.NegraLazy" -> "Tools.Miscellaneous"; 

"Algorithms.EMDictionaryArray" -> "Tools.PrettyPrint"; 
"Algorithms.EMDictionaryIntMap" -> "Tools.PrettyPrint"; 
"EMTest" -> "Tools.PrettyPrint"; 

"BenchmarkTDBH" -> "Tools.Timestamps"; 

{ rank = same; "Algorithms.CYK"; "Algorithms.CYKExtended"; "Algorithms.EMDictionaryArray"; "Algorithms.EMDictionaryIntMap"; "BenchmarkNegra"; "BenchmarkTDBH"; "EMTest"; "HUnit_Test.InsideOutsideWeightsTest"; "Main"; "Parser.HGraphLoader"; "Parser.Penn"; "QuickCheck_Test.InsideOutsideWeightsTest"; }
{ rank = same; "Algorithms.ExpectationMaximization"; "Algorithms.WTABarHillelComplete"; "Algorithms.WTABarHillelTopDown"; "Algorithms.WTABarHillelTopDownBinarizing"; "Data.WCFG"; "Demo"; "Tools.PrettyPrint"; "Tools.Timestamps"; }
{ rank = same; "Algorithms.RuleExtraction"; "Algorithms.StateSplit"; "Data.WSA"; "Parser.Negra"; "TestData.TestWTA"; }
{ rank = same; "Algorithms.EMTrees"; "Data.WTA"; }
{ rank = same; "Algorithms.InsideOutsideWeightsTree"; }
{ rank = same; "Algorithms.InsideOutsideWeights"; "Parser.NegraLazy"; "TestData.TestHypergraph"; }
{ rank = same; "Data.Hypergraph"; "Data.Negra"; }
{ rank = same; "Algorithms.NBest"; "Data.Queue"; "Tools.FastNub"; }
{ rank = same; "Tools.Miscellaneous"; }

}
